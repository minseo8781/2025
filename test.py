import streamlit as st
import pandas as pd
import random

# ------------------------------
# 앱 기본 설정
# ------------------------------
st.set_page_config(page_title="🍎 건강 식단 & 칼로리 계산기", page_icon="🥗", layout="wide")
st.title("🥗 건강한 식단 & 칼로리 계산 + 운동 추천 앱")
st.write("오늘 먹은 음식을 입력하면 칼로리를 계산하고, 부족하거나 초과한 칼로리에 맞는 운동을 추천합니다!")

# ------------------------------
# 음식 칼로리 데이터 (한식 + 양식 + 간식 + 음료)
# ------------------------------
food_calories = {
    # 한식
    "김밥": 300, "라면": 500, "치킨": 800, "피자": 700, "삼겹살": 600,
    "된장찌개": 350, "비빔밥": 550, "불고기": 450, "순두부찌개": 400, "칼국수": 480,
    "떡볶이": 400, "잡채": 350, "김치찌개": 380, "갈비탕": 600, "족발": 750,

    # 양식
    "햄버거": 550, "스파게티": 600, "샐러드": 150, "스테이크": 700, "샌드위치": 400,
    "감자튀김": 300, "핫도그": 450, "치즈케이크": 350, "파스타": 500, "리조또": 550,

    # 간식 & 디저트
    "바나나": 90, "사과": 60, "딸기": 50, "초콜릿": 200, "아이스크림": 250,
    "빵": 250, "쿠키": 180, "도넛": 270, "머핀": 300, "떡": 220,

    # 음료
    "우유": 120, "커피": 50, "콜라": 140, "주스": 150, "버블티": 350,
    "에너지드링크": 200, "스무디": 250
}

# ------------------------------
# 음식 선택
# ------------------------------
selected_foods = st.multiselect("🍽️ 오늘 먹은 음식을 선택하세요", list(food_calories.keys()))
total_calories = sum([food_calories[food] for food in selected_foods])

st.subheader("📊 오늘의 섭취 칼로리")
st.metric(label="총 섭취 칼로리", value=f"{total_calories} kcal")

# ------------------------------
# 하루 권장 칼로리 설정
# ------------------------------
gender = st.radio("👤 성별을 선택하세요", ["남성", "여성"])
if gender == "남성":
    recommended_cal = 2500
else:
    recommended_cal = 2000

st.write(f"👉 하루 권장 칼로리: **{recommended_cal} kcal**")

# ------------------------------
# 운동 데이터
# ------------------------------
exercise_list = [
    {"운동": "걷기 🚶", "칼로리소모": 280},
    {"운동": "달리기 🏃", "칼로리소모": 500},
    {"운동": "자전거 🚴", "칼로리소모": 400},
    {"운동": "수영 🏊", "칼로리소모": 600},
    {"운동": "줄넘기 🤾", "칼로리소모": 450},
    {"운동": "요가 🧘", "칼로리소모": 200}
]

# ------------------------------
# 칼로리 비교 및 운동 추천
# ------------------------------
st.subheader("💪 결과 분석")

if total_calories > recommended_cal:
    st.error("⚠️ 권장 칼로리를 초과했습니다! 운동이 필요해요.")
    need_burn = total_calories - recommended_cal
    st.write(f"🔥 추가로 **{need_burn} kcal**를 소모해야 합니다.")

    # 운동 여러 개 추천
    st.write("추천 운동 (무작위 3개):")
    selected_exercises = random.sample(exercise_list, 3)
    for ex in selected_exercises:
        st.write(f"- {ex['운동']} : 약 {ex['칼로리소모']} kcal 소모")

    # 차트 표시
    df = pd.DataFrame(selected_exercises)
    st.bar_chart(df.set_index("운동"))

elif total_calories < recommended_cal - 300:
    st.warning("🍽️ 권장 칼로리보다 적게 먹었습니다. 영양을 더 보충하세요!")
else:
    st.success("✅ 적절한 칼로리를 섭취했습니다! 건강을 유지하세요.")

# ------------------------------
# 피드백 입력
# ------------------------------
st.subheader("📝 피드백 남기기")
feedback = st.text_area("앱에 대한 의견을 남겨주세요!")
if st.button("제출"):
    st.success("피드백이 저장되었습니다. 감사합니다 🙏")
